set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake
	/usr/share/apps/cmake/modules)

ADD_EXECUTABLE(webcam_caster webcam_caster.c)
ADD_EXECUTABLE(vnc_caster vnc_caster.c)
#include_directories(/home/tanxin/final/dist/include/gstreamer-0.10)

#TARGET_LINK_LIBRARIES(webcam_caster gstrtspserver-0.10)
#TARGET_LINK_LIBRARIES(vnc_caster gstrtspserver-0.10)

FIND_PACKAGE(GSTRtspServer)
IF(GSTRtspServer_FOUND)
	INCLUDE_DIRECTORIES(${GSTRtspServer_INCLUDE_DIR})
	TARGET_LINK_LIBRARIES(webcam_caster ${GSTRtspServer_LIBRARY})
	TARGET_LINK_LIBRARIES(vnc_caster ${GSTRtspServer_LIBRARY})
ELSE(GSTRtspServer_FOUND)
	MESSAGE(FATAL_ERROR "GST Rtsp Server library not found")
ENDIF(GSTRtspServer_FOUND)


FIND_PACKAGE(CURL)
IF(CURL_FOUND)
	INCLUDE_DIRECTORIES(${CURL_INCLUDE_DIR})
	TARGET_LINK_LIBRARIES(webcam_caster ${CURL_LIBRARY})
	TARGET_LINK_LIBRARIES(vnc_caster ${CURL_LIBRARY})
ELSE(CURL_FOUND)
	MESSAGE(FATAL_ERROR "CURL library not found")
ENDIF(CURL_FOUND)

FIND_PACKAGE(GStreamer)
IF(GSTREAMER_FOUND)
	INCLUDE_DIRECTORIES(${GSTREAMER_INCLUDE_DIR})
	TARGET_LINK_LIBRARIES(webcam_caster ${GSTREAMER_LIBRARY})
	TARGET_LINK_LIBRARIES(vnc_caster ${GSTREAMER_LIBRARY})
ELSE(GSTREAMER_FOUND)
	MESSAGE(FATAL_ERROR "GStreamer library not found")
ENDIF(GSTREAMER_FOUND)

FIND_PACKAGE(GLIB2)
IF(GLIB2_FOUND)
	INCLUDE_DIRECTORIES(${GLIB2_INCLUDE_DIR})
	TARGET_LINK_LIBRARIES(webcam_caster ${GLIB2_LIBRARIES})
	TARGET_LINK_LIBRARIES(vnc_caster ${GLIB2_LIBRARIES})
ELSE(GLIB2_FOUND)
	MESSAGE(FATAL_ERROR "GLIB2 library not found")
ENDIF(GLIB2_FOUND)

FIND_PACKAGE(LibXml2)
IF(LIBXML2_FOUND)
	INCLUDE_DIRECTORIES(${LIBXML2_INCLUDE_DIR})
	TARGET_LINK_LIBRARIES(webcam_caster ${LIBXML2_LIBRARIES})
	TARGET_LINK_LIBRARIES(vnc_caster ${LIBXML2_LIBRARIES})
ELSE(LIBXML2_FOUND)
	MESSAGE(FATAL_ERROR "LIBXML2 library not found")
ENDIF(LIBXML2_FOUND)

INSTALL(TARGETS webcam_caster vnc_caster
	RUNTIME DESTINATION bin
	)

